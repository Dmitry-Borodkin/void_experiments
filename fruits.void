{   v_import("level-00");
    v_import("level-01");

    v_import("llvm-c/Core.void");

    v_import("printf.void");
}

{   v_enable_level_01(); }


//---------------------------------------------------------------------
check: (a: long, b: long, c: long) -> bool
{
    ab = a + b;     if (ab == 0)  v_return(false);
    ac = a + c;     if (ac == 0)  v_return(false);
    bc = b + c;     if (bc == 0)  v_return(false);

    v_return(a*ab*ac + b*ab*bc + c*ac*bc == 4*ab*ac*bc);
}


//---------------------------------------------------------------------
{
    N = 20;

    a: &long := -N;

    loop
    {
        if (a > N)  v_break();

        b: &long := a;

        loop
        {
            if (b > N)  v_break();

            c: &long := b;

            loop
            {
                if (c > N)  v_break();

                if (check(a, b, c))
                {
                    printf("(%d, %d, %d)\n", a, b, c);
                }

                ++c;
            }

            ++b;
        }

        ++a;
    }
}




//---------------------------------------------------------------------
bigint_t = int(1024);

mk_const: (name: *char, str: *char) -> void
{
    num_v = LLVMConstIntOfString(v_type_get_llvm_type(bigint_t), str, 10);

    v_add_constant(name, bigint_t, num_v);
}


//---------------------------------------------------------------------
{
    mk_const("A", "154476802108746166441951315019919837485664325669565431700026634898253202035277999");
    mk_const("B",  "36875131794129999827197811565225474825492979968971970996283137471637224634055579");
    mk_const("C",   "4373612677928697257861252602371390152816537558161613618621437993378423467772036");
}


//---------------------------------------------------------------------
check_bigint: (a: bigint_t, b: bigint_t, c: bigint_t) -> bool
{
    ab = a + b;     if (ab == 0)  v_return(false);
    ac = a + c;     if (ac == 0)  v_return(false);
    bc = b + c;     if (bc == 0)  v_return(false);

    v_return(a*ab*ac + b*ab*bc + c*ac*bc == 4*ab*ac*bc);
}


//---------------------------------------------------------------------
{
    if (check_bigint(A, B, C))  printf("\nOK\n");
    else                        printf("\nFail\n");
}



