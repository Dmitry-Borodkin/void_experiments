{ v_import("mainline.void"); }
{ v_enable_mainline(); }
{
    v_import("cstdio.void");
    v_import("type_traits.void");
}

//=====================================================================
check: (a: long, b: long, c: long) ~> bool
{
    ab = a + b;     if (ab == 0)  return false;
    ac = a + c;     if (ac == 0)  return false;
    bc = b + c;     if (bc == 0)  return false;

    return  a*ab*ac + b*ab*bc + c*ac*bc == 4*ab*ac*bc;
}

//---------------------------------------------------------------------
{
    N = 20;

    for (a: &long := -N; a <= N; ++a)
    {
        for (b: &long := a; b <= N; ++b)
        {
            for (c: &long := b; c <= N; ++c)
            {
                if (check(a, b, c))
                {
                    printf("(%d, %d, %d)\n", a, b, c);
                }
            }
        }
    }
}


//=====================================================================
A = 154476802108746166441951315019919837485664325669565431700026634898253202035277999;
B =  36875131794129999827197811565225474825492979968971970996283137471637224634055579;
C =   4373612677928697257861252602371390152816537558161613618621437993378423467772036;


//---------------------------------------------------------------------
#define get_kw: (v) ~> int[2]  =
{
    t = v_typeof(v).as_integer;

    k = t.is_signed;
    w = t.width;

    { k, w }
};

{   kw: &int[][2] := { get_kw(A), get_kw(B), get_kw(C) };

    printf("\n");

    printf("A: (%d, %d)\n", kw[0][0], kw[0][1]);
    printf("B: (%d, %d)\n", kw[1][0], kw[1][1]);
    printf("C: (%d, %d)\n", kw[2][0], kw[2][1]);
}


//---------------------------------------------------------------------
num_t = uint(800);          //- Sic !!!


//---------------------------------------------------------------------
check_num: (a: num_t, b: num_t, c: num_t) ~> bool  =
{
    ab = a + b;     ac = a + c;     bc = b + c;

    a*ab*ac + b*ab*bc + c*ac*bc == 4*ab*ac*bc
};


//---------------------------------------------------------------------
{
    if (check_num(A, B, C)) printf("\nOK\n");
    else                    printf("\nFail\n");
}


//=====================================================================
//{ v_debug_print_module(2); }
{
    #define check: (a: num_t, b: num_t, c: num_t)  =
    {
        ab = a + b;     ac = a + c;     bc = b + c;

        a*ab*ac + b*ab*bc + c*ac*bc == 4*ab*ac*bc
    };

    #if (check(A, B, C))  printf("\nOK\n");
    #else                 printf("\nFail\n");
    #endif
}


{   N = 800;

    nt = uint(N);

    a: nt = A;
    b: nt = B;
    c: nt = C;

    V = 4*(a + b)*(a + c)*(b + c);

    printf("\n");

    for (i: &int := 0; i < N; ++i)
    {
        b = (((1:nt) << i) & V) != 0;

        printf("%d %d\n", (b: int), i);
    }

}


