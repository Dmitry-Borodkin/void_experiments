{   v_import("try_imports.void"); }

//---------------------------------------------------------------------
{   make_module("try_main"); }
//---------------------------------------------------------------------
{
    v_import("try_cstdarg.void");
    v_import("try_cassert.void");

    v_import("try_header.void");
}


//---------------------------------------------------------------------
test_fun: (n: int, ...) -> void
{
    ap: &va_list := v_undef();

    va_start(ap);

    for (i: &int := 0; i < n; ++i)
    {
        v = va_arg(ap, int);

        printf("%d: %d\n", i, v);
    }

    va_end(ap);
}


//---------------------------------------------------------------------
//- As is...
//---------------------------------------------------------------------
main: (argc: int, argv: **const char) -> int
{
    a = EOF;

    for (i: &int := 0; i < argc; i.inc)
    {
        printf("%s\n", argv[i]);
    }

    printf("\n");

    d2: &data2_t := {};         //- Sic!

    printf("\n");

    test_fun(3, 0, 1, 2);

    printf("\n");

    test_fun(5, 44, 33, 22, 11, 0);

    printf("\n");

    v = big_vec + 7;

    for (i: &int := 0; i < 4; ++i)
    {
        printf("v[%d]: %d\n", i, (v[i]: int));
    }

    printf("\n");

//  v_assert(2 * 2 == 5  &&  "Hello!");

    v_return(0);
}


//---------------------------------------------------------------------
{   emit_module("try_main.o"); }
//---------------------------------------------------------------------

