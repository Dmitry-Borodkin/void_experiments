{   v_import("mainline.void");

    v_import("llvm-c/Core.void");

    v_import("printf.void");
}

{   v_enable_mainline();
}


//---------------------------------------------------------------------
det_helper: (N: int, v: **LLVMValueRef) ~> LLVMValueRef
{
    if (N == 1) v_return(v[0][0]);

    builder = v_target_get_builder();

    r: &LLVMValueRef := v_undef();

    w = v_alloca(*LLVMValueRef, N-1);

    for (i: &int := 0; i < N; ++i)
    {
        {   k: &int := 0;

            for (j: &int := 0; j < N; ++j)
            {
                if (j == i) v_continue();

                w[k++] := v[j] + 1;
            }
        }

        d = det_helper(N-1, w);

        p = LLVMBuildFMul(builder, v[i][0], d, "");

        if (i == 0)
        {
            r := p;

            v_continue();
        }

        if (i & 1)  r := LLVMBuildFSub(builder, r, p, "");
        else        r := LLVMBuildFAdd(builder, r, p, "");
    }

    v_return(r);
}


//---------------------------------------------------------------------
determinant_intrinsic: (*void, vis: *voidc_visitor_t, self: *v_ast_base_t) ~> void
{
    call = (self: *v_ast_expr_t);

    arg_list = v_ast_expr_call_get_arg_list(call);

    arg = v_list_get_item(arg_list, 0);

    ttag = v_get_result_type();
    vtag = v_get_result_value();

    v_set_result_type(INVIOLABLE_TAG);
    v_set_result_value(0);

    v_ast_accept_visitor((arg : *v_ast_base_t), vis);

    t: &v_type_ptr   := v_get_result_type();
    v: &LLVMValueRef := v_get_result_value();

    builder = v_target_get_builder();

    if (v_type_is_reference(t))
    {
        t := v_type_refptr_get_element_type(t);

        v := LLVMBuildLoad2(builder, v_type_get_llvm_type(t), v, "");
    }

    N = (v_type_array_get_length(t) : int);

    VV = v_malloc(LLVMValueRef, N*N);
    defer v_free(VV);

    V = v_alloca(*LLVMValueRef, N);

    for (i: &int := 0; i < N; ++i)
    {
        V[i] := VV + i*N;

        vi = LLVMBuildExtractValue(builder, v, i, "");

        for (j: &int := 0; j < N; ++j)
        {
            V[i][j] := LLVMBuildExtractValue(builder, vi, j, "");
        }
    }

    r = det_helper(N, V);

    t = v_type_array_get_element_type(t);
    t = v_type_array_get_element_type(t);

    v_set_result_type(ttag);
    v_set_result_value(vtag);

    v_adopt_result(t, r);
}

{   v_add_intrinsic("determinant", determinant_intrinsic, 0);
}


//---------------------------------------------------------------------
//{ v_debug_print_module(1); }
{
    A: float(64)[9][9] =
    {
        { 5, 2, 1, 4, 6, 0, 0, 0, 0},
        { 9, 4, 2, 5, 2, 0, 0, 0, 0},
        {11, 5, 7, 3, 9, 0, 0, 0, 0},
        { 5, 6, 6, 7, 2, 0, 0, 0, 0},
        { 7, 5, 9, 3, 3, 0, 0, 0, 0},
        { 0, 0, 0, 0, 0, 1, 0, 0, 0},
        { 0, 0, 0, 0, 0, 0, 1, 0, 0},
        { 0, 0, 0, 0, 0, 0, 0, 1, 0},
        { 0, 0, 0, 0, 0, 0, 0, 0, 1},
    };

    d = determinant(A);

    printf("d: %g\n", d);
}


