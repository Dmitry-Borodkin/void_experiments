{   v_import("voidc_target.void");
    v_import("function_hack.void");

    v_import("llvm-c/Core.void");
}

{   v_import("printf.void"); }


{   int_sz_v  = LLVMSizeOf(int);
    long_sz_v = LLVMSizeOf(long);
    ptr_sz_v  = LLVMSizeOf(intptr_t);

    v_add_local_constant("int_sz",  int_sz_v);
    v_add_local_constant("long_sz", long_sz_v);
    v_add_local_constant("ptr_sz",  ptr_sz_v);
}

{   gctx = v_target_create_global_ctx(int_sz, long_sz, ptr_sz);

    v_add_local_symbol("my_gctx", v_target_opaque_global_ctx, gctx);


    lctx = v_target_create_local_ctx("<target test>", gctx);

    v_add_local_symbol("my_lctx", v_target_opaque_local_ctx, lctx);


    v_target_set_global_ctx(gctx);
}


{   llvm_ctx = v_target_get_llvm_ctx();

    module = LLVMModuleCreateWithNameInContext("hello_mod", llvm_ctx);

    v_set_module(module);
}

{   _char = v_find_type("char");
    _int  = v_find_type("int");

    char_ptr = LLVMPointerType(_char, 0);

    arg = v_alloca(LLVMTypeRef);

    v_store(char_ptr, arg);

    printf_ft = LLVMFunctionType(_int, arg, 1, 1);

    v_add_symbol_type("printf", printf_ft);
}

{
    _void = v_find_type("void");

    ft = LLVMFunctionType(_void, 0, 0, 0);

    f = v_function_hack("f_hack", ft);
}
{
    printf("Hello from f_hack!\n");
}


{
    _void = v_find_type("void");

    ft = LLVMFunctionType(_void, 0, 0, 0);

    f = v_function_hack("f_hack2", ft);

    LLVMSetDLLStorageClass(f, LLVMDLLExportStorageClass);
}
{
    f_hack();
}



{
    module = v_get_module();

    f = LLVMGetNamedFunction(module, "f_hack");

    LLVMSetLinkage(f, LLVMPrivateLinkage);
}











{
    module = v_get_module();

    v_set_module(0);

    //-----------------------------------------------------------------
    v_debug_print_module(1);

    v_verify_module(module);





}












{   vctx = v_target_get_voidc_global_ctx();

    v_target_set_global_ctx(vctx);


    v_target_destroy_local_ctx(my_lctx);
    v_target_destroy_global_ctx(my_gctx);
}


