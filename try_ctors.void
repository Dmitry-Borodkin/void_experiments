{   v_import("level-00");
    v_import("level-01");
    v_import("level-02");

    v_import("llvm-c/Core.void");

    v_import("printf.void");
}

{   v_enable_level_01();
    v_enable_level_02();
}


//---------------------------------------------------------------------
try_variable: &int := 77;


//=====================================================================
{   voidc_unit_begin_module("try_ctors_module"); }


//---------------------------------------------------------------------
private
ptr_variable: &*int := v_undef();


//---------------------------------------------------------------------
try_ctors: () -> void
{
    printf("ptr_variable: %p\n", ptr_variable);

    v = *ptr_variable;

    v += 700;

    printf("try_ctors: %d\n", v);
}


//---------------------------------------------------------------------
private
try_ctors_ctor: () -> void
{
    printf("try_ctors_ctor\n");

    v_find_symbol_value: (*const char) -> *void;

    ptr_variable := (v_find_symbol_value("try_variable") : *int);

    printf("ptr_variable: %p\n", ptr_variable);
}

private
llvm_global_cdtors_item_t = v_struct({int(32), *(() -> void), *void});

my_llvm_global_ctors: &llvm_global_cdtors_item_t[] :=
{
    {65535, try_ctors_ctor, 0}
};

{   module = v_get_module();

    g = LLVMGetNamedGlobal(module, "my_llvm_global_ctors");

    LLVMSetValueName2(g, "llvm.global_ctors", 17);

    LLVMSetLinkage(g, LLVMAppendingLinkage);
}


//---------------------------------------------------------------------
try_ctors_ctor_my: () -> void
{
    printf("try_ctors_ctor_my\n");

    v_find_symbol_value: (*const char) -> *void;

    ptr_variable := (v_find_symbol_value("try_variable") : *int);

    printf("ptr_variable: %p\n", ptr_variable);
}

try_ctors_dtor_my: () -> void
{
    printf("try_ctors_dtor_my\n");
}

{   module = v_get_module();

    f = LLVMGetNamedFunction(module, "try_ctors_ctor_my");

    LLVMSetValueName2(f, "__orc_init_func.hzhzhz", 22);

    f = LLVMGetNamedFunction(module, "try_ctors_dtor_my");

    LLVMSetValueName2(f, "__orc_deinit_func.hzhzhz", 24);
}


//=====================================================================
//{ v_debug_print_module(99); }

{   voidc_unit_end_module(); }


//---------------------------------------------------------------------
//try_ctors: () -> void;

{
    printf("try_ctors: %p\n", try_ctors);

    try_ctors();

    printf("try_variable: %d\n", try_variable);
}








