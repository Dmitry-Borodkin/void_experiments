{ v_import("libvoidc.void"); }
{ voidc_make_module("main_module"); }
//---------------------------------------------------------------------
{
    v_import("cstdio.void");
    v_import("cstdarg.void");

    v_import("string.void");
}


//{ v_debug_print_module(9); }


//---------------------------------------------------------------------
pr_string: (s: v_string_t) ~> void
{
    printf("d: %s, s: %zd, c: %zd\n", s.data, s.size, s.capacity);
}


//---------------------------------------------------------------------
alwaysinline
(_:=_): (str: &v_string_t, val: v_string_t) ~> &v_string_t
{
    v_copy(&str, &val);

    return  str;
}


//---------------------------------------------------------------------
alwaysinline
(_+_): (a: v_string_t, b: v_string_t) ~> v_string_t
{
    ret = v_get_return_value();

    ret := a;

    ret.append_data(b.data, b.size);
}


//---------------------------------------------------------------------
print_fibs: (n: int) ~> void
{
    s: &v_string_t[2] := { "1", "0" };

    pr_string(s[1]);

    for (i: &int := 0; i < n; ++i)
    {
        t = s[1] + s[0];

        s[0] := s[1];
        s[1] := t;

        pr_string(t);
    }
}


//---------------------------------------------------------------------
(_.appendf()): (str: &v_string_t, fmt: *const char, ...) ~> &v_string_t  =
{
    ap:  &va_list := undef;
    apc: &va_list := undef;

    va_start(ap);

    va_copy(apc, ap);
    len = vsnprintf(0, 0, fmt, ap);
    va_end(ap);

    bsz = len + 1;

    buf = v_malloc(char, bsz);
    defer v_free(buf);

    vsnprintf(buf, bsz, fmt, apc);
    va_end(apc);

    str.append_data(buf, len)
};



//---------------------------------------------------------------------
//- As is...
//---------------------------------------------------------------------
main: (argc: int, argv: **const char) ~> int
{
    s: &v_string_t := "qwerty____0";

    pr_string(s);

    s.set("qwerty_________1");

    pr_string(s);

    s := "qwerty_______________________________________________________________________________________2";

    pr_string(s);

    s := "qwerty___________________3";

    pr_string(s);

    s.set("qwerty_____4");

    pr_string(s);

    s.append("asdfgh_____5");

    pr_string(s);

    s.append_char(('_': char)).append_char32('Ð«');

    pr_string(s);

    s.append("_").append_number((-1 : size_t) >> 1);

    pr_string(s);

    sqrt: (float(64)) ~> float(64);

    s.appendf(" %g %g", (1+sqrt(5))/2, sqrt(2));

    pr_string(s);

    //-------------------------------------------------------------
    printf("\n");

    print_fibs(9);

    //-------------------------------------------------------------
    printf("\n");

    s1: v_string_t = "Hello";

    s2: &v_string_t := s1;

    pr_string(s2);


    return  0;
}


//---------------------------------------------------------------------
{ voidc_emit_module("main.o"); }
//---------------------------------------------------------------------
